{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/hooks/InternshipContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InternshipContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const InternshipProvider = ({\n  children\n}) => {\n  _s();\n  const [internship, setInternship] = useState(null);\n  const [allInternships, setAllInternships] = useState([]);\n  return /*#__PURE__*/_jsxDEV(InternshipContext.Provider, {\n    value: {\n      internship,\n      setInternship,\n      allInternships,\n      setAllInternships\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook for using the context\n_s(InternshipProvider, \"RPBJYuIe21L8l/saMpr6N7y8Q4o=\");\n_c = InternshipProvider;\nexport const useInternshipContext = () => {\n  _s2();\n  return useContext(InternshipContext);\n};\n_s2(useInternshipContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InternshipProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","InternshipContext","InternshipProvider","children","_s","internship","setInternship","allInternships","setAllInternships","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInternshipContext","_s2","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/hooks/InternshipContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create the context\nconst InternshipContext = createContext();\n\n// Create a provider component\nexport const InternshipProvider = ({ children }) => {\n  const [internship, setInternship] = useState(null);\n  const [allInternships, setAllInternships] = useState([]);\n\n  return (\n    <InternshipContext.Provider value={{ internship, setInternship, allInternships, setAllInternships }}>\n      {children}\n    </InternshipContext.Provider>\n  );\n};\n\n// Create a custom hook for using the context\nexport const useInternshipContext = () => {\n  return useContext(InternshipContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMM,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,oBACEE,OAAA,CAACC,iBAAiB,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,UAAU;MAAEC,aAAa;MAAEC,cAAc;MAAEC;IAAkB,CAAE;IAAAL,QAAA,EACjGA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;;AAED;AAAAV,EAAA,CAXaF,kBAAkB;AAAAa,EAAA,GAAlBb,kBAAkB;AAY/B,OAAO,MAAMc,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxC,OAAOpB,UAAU,CAACI,iBAAiB,CAAC;AACtC,CAAC;AAACgB,GAAA,CAFWD,oBAAoB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}