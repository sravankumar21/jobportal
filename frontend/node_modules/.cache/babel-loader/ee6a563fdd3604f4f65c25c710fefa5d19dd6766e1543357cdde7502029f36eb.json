{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n\n  // Fetch the details of a specific job based on the ID from the URL\n  useEffect(() => {\n    const fetchJobDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:4444/jobs/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJob(data.job);\n        } else {\n          console.error('Failed to fetch job details');\n        }\n      } catch (error) {\n        console.error('Error fetching job details:', error.message);\n      }\n    };\n    fetchJobDetails();\n  }, [id]);\n\n  // Fetch all jobs from the backend and update the allJobs state\n  useEffect(() => {\n    const fetchAllJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/jobs');\n        if (response.ok) {\n          const data = await response.json();\n          setAllJobs(data.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n      } catch (error) {\n        console.error('Error fetching all jobs:', error.message);\n      }\n    };\n    fetchAllJobs();\n  }, []);\n\n  // Render loading message if the job details are not available yet\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the job details and a list of all jobs\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homedetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: job.jobTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: job.jobTitle\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"7C2Acs0AUbmY/M/0HuA0VOLicso=\", false, function () {\n  return [useParams];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","JobDetails","_s","id","job","setJob","allJobs","setAllJobs","fetchJobDetails","response","fetch","ok","data","json","console","error","message","fetchAllJobs","jobs","children","fileName","_jsxFileName","lineNumber","columnNumber","className","jobTitle","map","_id","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the CSS file\n\nconst JobDetails = () => {\n  const { id } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n\n  // Fetch the details of a specific job based on the ID from the URL\n  useEffect(() => {\n    const fetchJobDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:4444/jobs/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJob(data.job);\n        } else {\n          console.error('Failed to fetch job details');\n        }\n      } catch (error) {\n        console.error('Error fetching job details:', error.message);\n      }\n    };\n\n    fetchJobDetails();\n  }, [id]);\n\n  // Fetch all jobs from the backend and update the allJobs state\n  useEffect(() => {\n    const fetchAllJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/jobs');\n        if (response.ok) {\n          const data = await response.json();\n          setAllJobs(data.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n      } catch (error) {\n        console.error('Error fetching all jobs:', error.message);\n      }\n    };\n\n    fetchAllJobs();\n  }, []);\n\n  // Render loading message if the job details are not available yet\n  if (!job) {\n    return <div>Loading job details...</div>;\n  }\n\n  // Render the job details and a list of all jobs\n  return (\n    <div className=\"homedetail\">\n      <div className=\"job-details\">\n        <h4>{job.jobTitle}</h4>\n        {/* Render other job details here */}\n      </div>\n\n      <div className=\"all-jobs\">\n        <h2>All Jobs</h2>\n        <ul>\n          {allJobs.map((job) => (\n            <li key={job._id}>{job.jobTitle}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default JobDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}