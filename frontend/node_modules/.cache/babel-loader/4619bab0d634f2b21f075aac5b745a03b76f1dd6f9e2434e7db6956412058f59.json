{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the job details by its ID from the backend\n  //   const fetchJobDetails = async () => {\n  //     try {\n  //       const response = await fetch(`http://localhost:4444/jobs/${id}`);\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         setJob(data.job);\n  //       } else {\n  //         console.error('Failed to fetch job details');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching job details:', error.message); // Log the error message\n  //     }\n\n  //   };\n\n  useEffect(() => {\n    // Fetch all jobs\n    const fetchAllJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/jobs');\n        if (response.ok) {\n          const data = await response.json();\n          setAllJobs(data.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n      } catch (error) {\n        console.error('Error fetching all jobs:', error.message);\n      }\n    };\n    fetchAllJobs();\n  }, []);\n\n  //   fetchJobDetails();\n  //   fetchAllJobs();\n  // }, [id]);\n\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homedetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: job.jobTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Company: \", job.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", job.jobType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", job.jobDescription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Work Type: \", job.workType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pay Scale: \", job.payScale]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Skills Required: \", job.skills.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Company URL: \", job.companyURL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: job.jobTitle\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"l1tcM62+ORBR+jgzfFswXVuoiwQ=\", false, function () {\n  return [useParams];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","JobDetails","_s","id","job","setJob","allJobs","setAllJobs","fetchAllJobs","response","fetch","ok","data","json","jobs","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","jobTitle","companyName","jobType","jobDescription","workType","payScale","skills","join","companyURL","map","_id","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the CSS file\n\nconst JobDetails = () => {\n  const { id } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the job details by its ID from the backend\n  //   const fetchJobDetails = async () => {\n  //     try {\n  //       const response = await fetch(`http://localhost:4444/jobs/${id}`);\n  //       if (response.ok) {\n  //         const data = await response.json();\n  //         setJob(data.job);\n  //       } else {\n  //         console.error('Failed to fetch job details');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching job details:', error.message); // Log the error message\n  //     }\n      \n  //   };\n\n    useEffect(() => {\n      // Fetch all jobs\n      const fetchAllJobs = async () => {\n        try {\n          const response = await fetch('http://localhost:4444/jobs');\n          if (response.ok) {\n            const data = await response.json();\n            setAllJobs(data.jobs);\n          } else {\n            console.error('Failed to fetch all jobs');\n          }\n        } catch (error) {\n          console.error('Error fetching all jobs:', error.message);\n        }\n      };\n    \n      fetchAllJobs();\n    }, []);\n    \n\n  //   fetchJobDetails();\n  //   fetchAllJobs();\n  // }, [id]);\n\n  if (!job) {\n    return <div>Loading job details...</div>;\n  }\n\n  return (\n    <div className=\"homedetail\">\n      <div className=\"job-details\">\n        <h4>{job.jobTitle}</h4>\n        <p>Company: {job.companyName}</p>\n        <p>Type: {job.jobType}</p>\n        <p>Description: {job.jobDescription}</p>\n        <p>Work Type: {job.workType}</p>\n        <p>Pay Scale: {job.payScale}</p>\n        <p>Skills Required: {job.skills.join(', ')}</p>\n        <p>Company URL: {job.companyURL}</p>\n      </div>\n      {/* Additional content or components for the right side */}\n      <div className=\"all-jobs\">\n        <h2>All Jobs</h2>\n        <ul>\n          {allJobs.map((job) => (\n            <li key={job._id}>{job.jobTitle}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default JobDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}