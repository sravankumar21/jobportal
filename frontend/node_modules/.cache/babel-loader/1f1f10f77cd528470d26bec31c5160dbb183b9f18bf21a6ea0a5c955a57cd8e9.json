{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useJobContext } from '../hooks/JobContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    job,\n    setJob,\n    allJobs,\n    setAllJobs\n  } = useJobContext();\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    jobTitle: '',\n    jobType: '',\n    jobDescription: '',\n    companyName: '',\n    workType: '',\n    payScale: '',\n    branchesEligible: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const allJobsResponse = await fetch('http://localhost:4444/jobs');\n        if (allJobsResponse.ok) {\n          const allJobsData = await allJobsResponse.json();\n          setAllJobs(allJobsData.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n        if (id) {\n          const jobResponse = await fetch(`http://localhost:4444/jobs/${id}`);\n          if (jobResponse.ok) {\n            const jobData = await jobResponse.json();\n            setJob(jobData);\n          } else {\n            console.error('Failed to fetch job details');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching job data:', error.message);\n      }\n    };\n    fetchData();\n  }, [id, setJob, setAllJobs]);\n  const handleEditClick = () => {\n    setEditMode(true);\n    setFormData({\n      jobTitle: job.jobTitle,\n      jobType: job.jobType,\n      jobDescription: job.jobDescription,\n      companyName: job.companyName,\n      workType: job.workType,\n      payScale: job.payScale,\n      branchesEligible: job.branchesEligible.join(', ')\n    });\n  };\n  const handleUpdate = async jobId => {\n    try {\n      const response = await fetch(`http://localhost:4444/jobs/${jobId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setJob(data);\n        setEditMode(false);\n        // Optionally, you can redirect to the job details page\n        // history.push(`/job-details/${jobId}`);\n      } else {\n        console.error('Failed to fetch job details for update');\n      }\n    } catch (error) {\n      console.error('Error updating job:', error.message);\n    }\n  };\n  const handleDelete = async jobId => {\n    try {\n      const response = await fetch(`http://localhost:4444/jobs/delete-job/${jobId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Job deleted successfully');\n        setAllJobs(prevJobs => prevJobs.filter(job => job._id !== jobId));\n      } else {\n        console.error('Failed to delete job');\n      }\n    } catch (error) {\n      console.error('Error deleting job:', error.message);\n    }\n  };\n  if (id && !job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details-container\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.jobTitle,\n          onChange: e => setFormData({\n            ...formData,\n            jobTitle: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"job-title\",\n          children: job.jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-jobs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-cards\",\n        children: allJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.jobTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [editMode ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"save-button\",\n              onClick: () => handleUpdate(job._id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"edit-button\",\n              onClick: () => handleEditClick(),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-button\",\n              onClick: () => handleDelete(job._id),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"xHY2pnAi5faY9IfPEuFrKqGe17s=\", false, function () {\n  return [useParams, useJobContext, useHistory];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","useJobContext","jsxDEV","_jsxDEV","JobDetails","_s","id","job","setJob","allJobs","setAllJobs","editMode","setEditMode","formData","setFormData","jobTitle","jobType","jobDescription","companyName","workType","payScale","branchesEligible","history","fetchData","allJobsResponse","fetch","ok","allJobsData","json","jobs","console","error","jobResponse","jobData","message","handleEditClick","join","handleUpdate","jobId","response","data","handleDelete","method","log","prevJobs","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/JobDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useJobContext } from '../hooks/JobContext';\n\nconst JobDetails = () => {\n  const { id } = useParams();\n  const { job, setJob, allJobs, setAllJobs } = useJobContext();\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    jobTitle: '',\n    jobType: '',\n    jobDescription: '',\n    companyName: '',\n    workType: '',\n    payScale: '',\n    branchesEligible: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const allJobsResponse = await fetch('http://localhost:4444/jobs');\n        if (allJobsResponse.ok) {\n          const allJobsData = await allJobsResponse.json();\n          setAllJobs(allJobsData.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n\n        if (id) {\n          const jobResponse = await fetch(`http://localhost:4444/jobs/${id}`);\n          if (jobResponse.ok) {\n            const jobData = await jobResponse.json();\n            setJob(jobData);\n          } else {\n            console.error('Failed to fetch job details');\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching job data:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [id, setJob, setAllJobs]);\n\n  const handleEditClick = () => {\n    setEditMode(true);\n    setFormData({\n      jobTitle: job.jobTitle,\n      jobType: job.jobType,\n      jobDescription: job.jobDescription,\n      companyName: job.companyName,\n      workType: job.workType,\n      payScale: job.payScale,\n      branchesEligible: job.branchesEligible.join(', '),\n    });\n  };\n\n  const handleUpdate = async (jobId) => {\n    try {\n      const response = await fetch(`http://localhost:4444/jobs/${jobId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setJob(data);\n        setEditMode(false);\n        // Optionally, you can redirect to the job details page\n        // history.push(`/job-details/${jobId}`);\n      } else {\n        console.error('Failed to fetch job details for update');\n      }\n    } catch (error) {\n      console.error('Error updating job:', error.message);\n    }\n  };\n\n  const handleDelete = async (jobId) => {\n    try {\n      const response = await fetch(`http://localhost:4444/jobs/delete-job/${jobId}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        console.log('Job deleted successfully');\n        setAllJobs((prevJobs) => prevJobs.filter((job) => job._id !== jobId));\n      } else {\n        console.error('Failed to delete job');\n      }\n    } catch (error) {\n      console.error('Error deleting job:', error.message);\n    }\n  };\n\n  if (id && !job) {\n    return <div>Loading job details...</div>;\n  }\n\n  return (\n    <div>\n      {id && (\n        <div className=\"job-details-container\">\n          {editMode ? (\n            <div>\n              {/* Render a form for editing */}\n              <input\n                type=\"text\"\n                value={formData.jobTitle}\n                onChange={(e) => setFormData({ ...formData, jobTitle: e.target.value })}\n              />\n              {/* Add fields for other job details */}\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"job-title\">{job.jobTitle}</h4>\n              {/* Render other job details here */}\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"all-jobs-container\">\n        <div className=\"job-cards\">\n          {allJobs.map((job) => (\n            <div key={job._id} className=\"job-card\">\n              <h3>{job.jobTitle}</h3>\n              {/* Render other job details here */}\n              <div className=\"action-buttons\">\n                {editMode ? (\n                  <span\n                    className=\"save-button\"\n                    onClick={() => handleUpdate(job._id)}\n                  >\n                    Save\n                  </span>\n                ) : (\n                  <span\n                    className=\"edit-button\"\n                    onClick={() => handleEditClick()}\n                  >\n                    Edit\n                  </span>\n                )}\n                <span\n                  className=\"delete-button\"\n                  onClick={() => handleDelete(job._id)}\n                >\n                  🗑️\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}