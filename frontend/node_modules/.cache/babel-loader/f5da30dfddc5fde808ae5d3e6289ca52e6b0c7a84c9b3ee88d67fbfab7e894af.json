{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/AdminLogin.js\",\n  _s = $RefreshSig$();\n// Import necessary dependencies\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Import useHistory from React Router\nimport '../otherstyles/admin.css'; // Import styles\nimport image from '../images/admin.webp'; // Import image\n\n// Define the functional component Admin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n  // State variables for username, password, action, error, and history\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [action, setAction] = useState('AdminLogin');\n  const [error, setError] = useState('');\n  const history = useHistory(); // Create a history object\n\n  const apiUrl = 'http://localhost:4444'; // Set your API base URL here\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/admin/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log(response);\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        console.log(data.token);\n        history.push(`/admin/dashboard`);\n      } else {\n        const errorData = await response.json();\n        console.log('sign-in failed', response.status, errorData);\n        setError(errorData.errors);\n        return;\n        // Display more meaningful error message based on response status\n        // if (response.status === 401) {\n        //   setError('Invalid username or password');\n        // } else {\n        //   setError('An error occurred during login: ' + response.statusText);\n        // }\n      }\n    } catch (error) {\n      console.error('An unexpected error occurred:', error);\n      setError('An unexpected error occurred');\n    }\n  };\n\n  // Return the JSX structure of the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Some Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"input\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"input\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"fD/2LbejWiWQM47ZSt/6idwn1gg=\", false, function () {\n  return [useHistory];\n});\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useHistory","image","jsxDEV","_jsxDEV","Admin","_s","username","setUsername","password","setPassword","action","setAction","error","setError","history","apiUrl","handleLogin","response","fetch","method","headers","body","JSON","stringify","console","log","ok","data","json","localStorage","setItem","token","push","errorData","status","errors","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/AdminLogin.js"],"sourcesContent":["// Import necessary dependencies\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Import useHistory from React Router\nimport '../otherstyles/admin.css'; // Import styles\nimport image from '../images/admin.webp'; // Import image\n\n// Define the functional component Admin\nexport default function Admin() {\n  // State variables for username, password, action, error, and history\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [action, setAction] = useState('AdminLogin');\n  const [error, setError] = useState('');\n  const history = useHistory(); // Create a history object\n\n  const apiUrl = 'http://localhost:4444'; // Set your API base URL here\n\n  const handleLogin = async () => {\n    \n    try {\n      const response = await fetch(`${apiUrl}/admin/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      console.log(response)\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        console.log(data.token);\n        history.push(`/admin/dashboard`);\n      } else {\n        const errorData=await response.json();\n        console.log('sign-in failed',response.status,errorData);\n        setError(errorData.errors);\n        return;\n        // Display more meaningful error message based on response status\n        // if (response.status === 401) {\n        //   setError('Invalid username or password');\n        // } else {\n        //   setError('An error occurred during login: ' + response.statusText);\n        // }\n        \n      }\n    } catch (error) {\n      console.error('An unexpected error occurred:', error);\n      setError('An unexpected error occurred');\n    }\n  };\n\n  // Return the JSX structure of the component\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <div className=\"image\">\n          {/* Display the admin image */}\n          <img src={image} alt=\"Some Description\" />\n          {/* Display the current action */}\n          <h1>{action}</h1>\n        </div>\n      </div>\n\n      {/* Input field for username */}\n      <input\n        type=\"text\"\n        id=\"username\"\n        className=\"input\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n\n      {/* Input field for password */}\n      <input\n        type=\"password\"\n        id=\"password\"\n        className=\"input\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n\n      {/* Display error message if there is an error */}\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Button to trigger the login function */}\n      <div className=\"submit\">\n        <div onClick={handleLogin}>Login</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}