{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/InternshipDetails.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useHistory } from 'react-router-dom';\n// import { useInternshipContext } from '../hooks/InternshipContext';\n\n// const InternshipDetails = () => {\n//   const { id } = useParams();\n//   const { internship, setInternship, allInternships, setAllInternships } = useInternshipContext();\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [formData, setFormData] = useState({\n//     internshipTitle: '',\n//     internshipType: '',\n//     internshipDescription: '',\n//     companyName: '',\n//     companyURL: '',\n//     duration: '',\n//     branchesEligible: '',\n//   });\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const fetchInternships = async () => {\n//       try {\n//         const response = await fetch('http://localhost:4444/internships');\n//         if (response.ok) {\n//           const data = await response.json();\n//           setAllInternships(data.internships);\n//         } else {\n//           console.error('Failed to fetch all internships');\n//         }\n//       } catch (error) {\n//         console.error('Error fetching all internships:', error.message);\n//       }\n//     };\n\n//     fetchInternships();\n\n//     if (id) {\n//       const currentInternship = allInternships.find((internship) => internship._id === id);\n//       setInternship(currentInternship);\n//       setFormData({\n//         internshipTitle: currentInternship.internshipTitle,\n//         internshipType: currentInternship.internshipType,\n//         internshipDescription: currentInternship.internshipDescription,\n//         companyName: currentInternship.companyName,\n//         companyURL: currentInternship.companyURL,\n//         duration: currentInternship.duration,\n//         branchesEligible: currentInternship.branchesEligible.join(', '),\n//       });\n//     }\n//   }, [id, setInternship, setAllInternships]);\n\n//   const handleUpdate = async (internshipId) => {\n//     try {\n//       const response = await fetch(`http://localhost:4444/internships/update-internship/${internshipId}`, {\n//         method: 'PATCH',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           internshipTitle: formData.internshipTitle,\n//           internshipType: formData.internshipType,\n//           internshipDescription: formData.internshipDescription,\n//           companyName: formData.companyName,\n//           companyURL: formData.companyURL,\n//           duration: formData.duration,\n//           branchesEligible: formData.branchesEligible.split(',').map(branch => branch.trim()),\n//         }),\n//       });\n\n//       if (response.ok) {\n//         const updatedInternship = await response.json();\n//         setIsEditing(true);\n//         history.push('/admin/add-internship');\n//         setInternship(updatedInternship);\n//       } else {\n//         console.error('Failed to update internship:', response.statusText);\n//       }\n//     } catch (error) {\n//       console.error('Error updating internship:', error.message);\n//     }\n//   };\n\n//   const handleDelete = async (internshipId) => {\n//     try {\n//       const response = await fetch(`http://localhost:4444/internships/${internshipId}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (response.ok) {\n//         setAllInternships((prevInternships) =>\n//           prevInternships.filter((internship) => internship._id !== internshipId)\n//         );\n//         console.log('Internship deleted successfully');\n//       } else {\n//         console.error('Failed to delete internship');\n//       }\n//     } catch (error) {\n//       console.error('Error deleting internship:', error.message);\n//     }\n//   };\n\n//   if (id && !internship) {\n//     return <div>Loading internship details...</div>;\n//   }\n\n//   return (\n//     <div className=\"homedetails\">\n//       {id && (\n//         <div className=\"internship-details\">\n//           {isEditing ? (\n//             <EditableRow\n//               editFormData={formData}\n//               handleUpdateClick={() => handleUpdate(internship._id)}\n//             />\n//           ) : (\n//             <div>\n//               <h4>{internship.internshipTitle}</h4>\n//               {/* Render other internship details here */}\n//             </div>\n//           )}\n//           <button onClick={isEditing ? () => handleUpdate(internship._id) : handleEditClick}>\n//             {isEditing ? 'Save' : 'Edit'}\n//           </button>\n//         </div>\n//       )}\n\n//       <div className=\"all-internships\">\n//         <h2>All Internships</h2>\n//         <div className=\"internship-cards\">\n//           {allInternships.map((internship) => (\n//             <div key={internship._id} className=\"internship-card\">\n//               <h3>{internship.internshipTitle}</h3>\n//               <p><strong>Internship Type:</strong> {internship.internshipType}</p>\n//               <p><strong>Description:</strong> {internship.internshipDescription}</p>\n//               <p><strong>Company:</strong> {internship.companyName}</p>\n//               <p><strong>Duration:</strong> {internship.duration}</p>\n//               <p><strong>Eligible branches:</strong> {internship.branchesEligible.join(', ')}</p>\n\n//               <div className=\"action-buttons\">\n//                 <span\n//                   role=\"img\"\n//                   aria-label=\"Update\"\n//                   onClick={() => handleUpdate(internship._id)}\n//                 >\n//                   ‚úèÔ∏è\n//                 </span>\n//                 <span\n//                   role=\"img\"\n//                   aria-label=\"Delete\"\n//                   onClick={() => handleDelete(internship._id)}\n//                 >\n//                   üóëÔ∏è\n//                 </span>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InternshipDetails;\n// InternshipDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useInternshipContext } from '../hooks/InternshipContext';\nimport EditableRow from './EditableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InternshipDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    internship,\n    setInternship,\n    allInternships,\n    setAllInternships\n  } = useInternshipContext();\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    internshipTitle: '',\n    internshipType: '',\n    internshipDescription: '',\n    companyName: '',\n    companyURL: '',\n    duration: '',\n    branchesEligible: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const fetchInternships = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/internships');\n        if (response.ok) {\n          const data = await response.json();\n          setAllInternships(data.internships);\n        } else {\n          console.error('Failed to fetch all internships');\n        }\n      } catch (error) {\n        console.error('Error fetching all internships:', error.message);\n      }\n    };\n    fetchInternships();\n    if (id) {\n      const currentInternship = allInternships.find(internship => internship._id === id);\n      setInternship(currentInternship);\n      setFormData({\n        internshipTitle: currentInternship.internshipTitle,\n        internshipType: currentInternship.internshipType,\n        internshipDescription: currentInternship.internshipDescription,\n        companyName: currentInternship.companyName,\n        companyURL: currentInternship.companyURL,\n        duration: currentInternship.duration,\n        branchesEligible: currentInternship.branchesEligible.join(', ')\n      });\n    }\n  }, [id, setInternship, setAllInternships]);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleUpdate = async updatedData => {\n    try {\n      const response = await fetch(`http://localhost:4444/internships/update-internship/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (response.ok) {\n        const updatedInternship = await response.json();\n        setIsEditing(false);\n        setInternship(updatedInternship);\n        history.push('/admin/add-internship');\n      } else {\n        console.error('Failed to update internship:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error updating internship:', error.message);\n    }\n  };\n  if (id && !internship) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading internship details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homedetails\",\n    children: [id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"internship-details\",\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(EditableRow, {\n        editFormData: formData,\n        handleUpdateClick: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: internship.internshipTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isEditing ? () => handleUpdate(formData) : handleEditClick,\n        children: isEditing ? 'Save' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-internships\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Internships\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"internship-cards\",\n        children: allInternships.map(internship => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"internship-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: internship.internshipTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Internship Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 18\n            }, this), \" \", internship.internshipType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 18\n            }, this), \" \", internship.internshipDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 18\n            }, this), \" \", internship.companyName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 18\n            }, this), \" \", internship.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Eligible branches:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 18\n            }, this), \" \", internship.branchesEligible.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"Update\",\n              onClick: () => handleUpdate(internship._id),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"Delete\",\n              onClick: () => handleDelete(internship._id),\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, internship._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(InternshipDetails, \"wiVty2DHvciOsxpCa3fZTBfGk9U=\", false, function () {\n  return [useParams, useInternshipContext, useHistory];\n});\n_c = InternshipDetails;\nexport default InternshipDetails;\nvar _c;\n$RefreshReg$(_c, \"InternshipDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","useInternshipContext","EditableRow","jsxDEV","_jsxDEV","InternshipDetails","_s","id","internship","setInternship","allInternships","setAllInternships","isEditing","setIsEditing","formData","setFormData","internshipTitle","internshipType","internshipDescription","companyName","companyURL","duration","branchesEligible","history","fetchInternships","response","fetch","ok","data","json","internships","console","error","message","currentInternship","find","_id","join","handleEditClick","handleUpdate","updatedData","method","headers","body","JSON","stringify","updatedInternship","push","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","editFormData","handleUpdateClick","onClick","map","role","handleDelete","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/InternshipDetails.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams, useHistory } from 'react-router-dom';\n// import { useInternshipContext } from '../hooks/InternshipContext';\n\n\n// const InternshipDetails = () => {\n//   const { id } = useParams();\n//   const { internship, setInternship, allInternships, setAllInternships } = useInternshipContext();\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [formData, setFormData] = useState({\n//     internshipTitle: '',\n//     internshipType: '',\n//     internshipDescription: '',\n//     companyName: '',\n//     companyURL: '',\n//     duration: '',\n//     branchesEligible: '',\n//   });\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const fetchInternships = async () => {\n//       try {\n//         const response = await fetch('http://localhost:4444/internships');\n//         if (response.ok) {\n//           const data = await response.json();\n//           setAllInternships(data.internships);\n//         } else {\n//           console.error('Failed to fetch all internships');\n//         }\n//       } catch (error) {\n//         console.error('Error fetching all internships:', error.message);\n//       }\n//     };\n\n//     fetchInternships();\n\n//     if (id) {\n//       const currentInternship = allInternships.find((internship) => internship._id === id);\n//       setInternship(currentInternship);\n//       setFormData({\n//         internshipTitle: currentInternship.internshipTitle,\n//         internshipType: currentInternship.internshipType,\n//         internshipDescription: currentInternship.internshipDescription,\n//         companyName: currentInternship.companyName,\n//         companyURL: currentInternship.companyURL,\n//         duration: currentInternship.duration,\n//         branchesEligible: currentInternship.branchesEligible.join(', '),\n//       });\n//     }\n//   }, [id, setInternship, setAllInternships]);\n\n//   const handleUpdate = async (internshipId) => {\n//     try {\n//       const response = await fetch(`http://localhost:4444/internships/update-internship/${internshipId}`, {\n//         method: 'PATCH',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           internshipTitle: formData.internshipTitle,\n//           internshipType: formData.internshipType,\n//           internshipDescription: formData.internshipDescription,\n//           companyName: formData.companyName,\n//           companyURL: formData.companyURL,\n//           duration: formData.duration,\n//           branchesEligible: formData.branchesEligible.split(',').map(branch => branch.trim()),\n//         }),\n//       });\n\n//       if (response.ok) {\n//         const updatedInternship = await response.json();\n//         setIsEditing(true);\n//         history.push('/admin/add-internship');\n//         setInternship(updatedInternship);\n//       } else {\n//         console.error('Failed to update internship:', response.statusText);\n//       }\n//     } catch (error) {\n//       console.error('Error updating internship:', error.message);\n//     }\n//   };\n\n//   const handleDelete = async (internshipId) => {\n//     try {\n//       const response = await fetch(`http://localhost:4444/internships/${internshipId}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (response.ok) {\n//         setAllInternships((prevInternships) =>\n//           prevInternships.filter((internship) => internship._id !== internshipId)\n//         );\n//         console.log('Internship deleted successfully');\n//       } else {\n//         console.error('Failed to delete internship');\n//       }\n//     } catch (error) {\n//       console.error('Error deleting internship:', error.message);\n//     }\n//   };\n\n//   if (id && !internship) {\n//     return <div>Loading internship details...</div>;\n//   }\n\n//   return (\n//     <div className=\"homedetails\">\n//       {id && (\n//         <div className=\"internship-details\">\n//           {isEditing ? (\n//             <EditableRow\n//               editFormData={formData}\n//               handleUpdateClick={() => handleUpdate(internship._id)}\n//             />\n//           ) : (\n//             <div>\n//               <h4>{internship.internshipTitle}</h4>\n//               {/* Render other internship details here */}\n//             </div>\n//           )}\n//           <button onClick={isEditing ? () => handleUpdate(internship._id) : handleEditClick}>\n//             {isEditing ? 'Save' : 'Edit'}\n//           </button>\n//         </div>\n//       )}\n\n//       <div className=\"all-internships\">\n//         <h2>All Internships</h2>\n//         <div className=\"internship-cards\">\n//           {allInternships.map((internship) => (\n//             <div key={internship._id} className=\"internship-card\">\n//               <h3>{internship.internshipTitle}</h3>\n//               <p><strong>Internship Type:</strong> {internship.internshipType}</p>\n//               <p><strong>Description:</strong> {internship.internshipDescription}</p>\n//               <p><strong>Company:</strong> {internship.companyName}</p>\n//               <p><strong>Duration:</strong> {internship.duration}</p>\n//               <p><strong>Eligible branches:</strong> {internship.branchesEligible.join(', ')}</p>\n\n//               <div className=\"action-buttons\">\n//                 <span\n//                   role=\"img\"\n//                   aria-label=\"Update\"\n//                   onClick={() => handleUpdate(internship._id)}\n//                 >\n//                   ‚úèÔ∏è\n//                 </span>\n//                 <span\n//                   role=\"img\"\n//                   aria-label=\"Delete\"\n//                   onClick={() => handleDelete(internship._id)}\n//                 >\n//                   üóëÔ∏è\n//                 </span>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default InternshipDetails;\n// InternshipDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useInternshipContext } from '../hooks/InternshipContext';\nimport EditableRow from './EditableRow';\n\nconst InternshipDetails = () => {\n  const { id } = useParams();\n  const { internship, setInternship, allInternships, setAllInternships } = useInternshipContext();\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    internshipTitle: '',\n    internshipType: '',\n    internshipDescription: '',\n    companyName: '',\n    companyURL: '',\n    duration: '',\n    branchesEligible: '',\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchInternships = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/internships');\n        if (response.ok) {\n          const data = await response.json();\n          setAllInternships(data.internships);\n        } else {\n          console.error('Failed to fetch all internships');\n        }\n      } catch (error) {\n        console.error('Error fetching all internships:', error.message);\n      }\n    };\n\n    fetchInternships();\n\n    if (id) {\n      const currentInternship = allInternships.find((internship) => internship._id === id);\n      setInternship(currentInternship);\n      setFormData({\n        internshipTitle: currentInternship.internshipTitle,\n        internshipType: currentInternship.internshipType,\n        internshipDescription: currentInternship.internshipDescription,\n        companyName: currentInternship.companyName,\n        companyURL: currentInternship.companyURL,\n        duration: currentInternship.duration,\n        branchesEligible: currentInternship.branchesEligible.join(', '),\n      });\n    }\n  }, [id, setInternship, setAllInternships]);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleUpdate = async (updatedData) => {\n    try {\n      const response = await fetch(`http://localhost:4444/internships/update-internship/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (response.ok) {\n        const updatedInternship = await response.json();\n        setIsEditing(false);\n        setInternship(updatedInternship);\n        history.push('/admin/add-internship');\n      } else {\n        console.error('Failed to update internship:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error updating internship:', error.message);\n    }\n  };\n\n  if (id && !internship) {\n    return <div>Loading internship details...</div>;\n  }\n\n  return (\n    <div className=\"homedetails\">\n      {id && (\n        <div className=\"internship-details\">\n          {isEditing ? (\n            <EditableRow editFormData={formData} handleUpdateClick={handleUpdate} />\n          ) : (\n            <div>\n              <h4>{internship.internshipTitle}</h4>\n              {/* Render other internship details here */}\n            </div>\n          )}\n          <button onClick={isEditing ? () => handleUpdate(formData) : handleEditClick}>\n            {isEditing ? 'Save' : 'Edit'}\n          </button>\n        </div>\n      )}\n\n<div className=\"all-internships\">\n           <h2>All Internships</h2>\n           <div className=\"internship-cards\">\n             {allInternships.map((internship) => (\n            <div key={internship._id} className=\"internship-card\">\n              <h3>{internship.internshipTitle}</h3>\n              <p><strong>Internship Type:</strong> {internship.internshipType}</p>\n              <p><strong>Description:</strong> {internship.internshipDescription}</p>\n              <p><strong>Company:</strong> {internship.companyName}</p>\n              <p><strong>Duration:</strong> {internship.duration}</p>\n              <p><strong>Eligible branches:</strong> {internship.branchesEligible.join(', ')}</p>\n\n              <div className=\"action-buttons\">\n                <span\n                  role=\"img\"\n                  aria-label=\"Update\"\n                  onClick={() => handleUpdate(internship._id)}\n                >\n                  ‚úèÔ∏è\n                </span>\n                <span\n                  role=\"img\"\n                  aria-label=\"Delete\"\n                  onClick={() => handleDelete(internship._id)}\n                >\n                  üóëÔ∏è\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternshipDetails;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,SAASC,oBAAoB,QAAQ,4BAA4B;AACjE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAES,UAAU;IAAEC,aAAa;IAAEC,cAAc;IAAEC;EAAkB,CAAC,GAAGV,oBAAoB,CAAC,CAAC;EAC/F,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACvCkB,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,EAAE;IAClBC,qBAAqB,EAAE,EAAE;IACzBC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EACF,MAAMC,OAAO,GAAGvB,UAAU,CAAC,CAAC;EAE5BH,SAAS,CAAC,MAAM;IACd,MAAM2B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClClB,iBAAiB,CAACiB,IAAI,CAACE,WAAW,CAAC;QACrC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;QAClD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;MACjE;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;IAElB,IAAIjB,EAAE,EAAE;MACN,MAAM2B,iBAAiB,GAAGxB,cAAc,CAACyB,IAAI,CAAE3B,UAAU,IAAKA,UAAU,CAAC4B,GAAG,KAAK7B,EAAE,CAAC;MACpFE,aAAa,CAACyB,iBAAiB,CAAC;MAChCnB,WAAW,CAAC;QACVC,eAAe,EAAEkB,iBAAiB,CAAClB,eAAe;QAClDC,cAAc,EAAEiB,iBAAiB,CAACjB,cAAc;QAChDC,qBAAqB,EAAEgB,iBAAiB,CAAChB,qBAAqB;QAC9DC,WAAW,EAAEe,iBAAiB,CAACf,WAAW;QAC1CC,UAAU,EAAEc,iBAAiB,CAACd,UAAU;QACxCC,QAAQ,EAAEa,iBAAiB,CAACb,QAAQ;QACpCC,gBAAgB,EAAEY,iBAAiB,CAACZ,gBAAgB,CAACe,IAAI,CAAC,IAAI;MAChE,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC9B,EAAE,EAAEE,aAAa,EAAEE,iBAAiB,CAAC,CAAC;EAE1C,MAAM2B,eAAe,GAAGA,CAAA,KAAM;IAC5BzB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM0B,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1C,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDnB,EAAG,EAAC,EAAE;QACxFkC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIf,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMmB,iBAAiB,GAAG,MAAMrB,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC/ChB,YAAY,CAAC,KAAK,CAAC;QACnBJ,aAAa,CAACqC,iBAAiB,CAAC;QAChCvB,OAAO,CAACwB,IAAI,CAAC,uBAAuB,CAAC;MACvC,CAAC,MAAM;QACLhB,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEP,QAAQ,CAACuB,UAAU,CAAC;MACpE;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC5D;EACF,CAAC;EAED,IAAI1B,EAAE,IAAI,CAACC,UAAU,EAAE;IACrB,oBAAOJ,OAAA;MAAA6C,QAAA,EAAK;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjD;EAEA,oBACEjD,OAAA;IAAKkD,SAAS,EAAC,aAAa;IAAAL,QAAA,GACzB1C,EAAE,iBACDH,OAAA;MAAKkD,SAAS,EAAC,oBAAoB;MAAAL,QAAA,GAChCrC,SAAS,gBACRR,OAAA,CAACF,WAAW;QAACqD,YAAY,EAAEzC,QAAS;QAAC0C,iBAAiB,EAAEjB;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExEjD,OAAA;QAAA6C,QAAA,eACE7C,OAAA;UAAA6C,QAAA,EAAKzC,UAAU,CAACQ;QAAe;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElC,CACN,eACDjD,OAAA;QAAQqD,OAAO,EAAE7C,SAAS,GAAG,MAAM2B,YAAY,CAACzB,QAAQ,CAAC,GAAGwB,eAAgB;QAAAW,QAAA,EACzErC,SAAS,GAAG,MAAM,GAAG;MAAM;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEPjD,OAAA;MAAKkD,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBACrB7C,OAAA;QAAA6C,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBjD,OAAA;QAAKkD,SAAS,EAAC,kBAAkB;QAAAL,QAAA,EAC9BvC,cAAc,CAACgD,GAAG,CAAElD,UAAU,iBAChCJ,OAAA;UAA0BkD,SAAS,EAAC,iBAAiB;UAAAL,QAAA,gBACnD7C,OAAA;YAAA6C,QAAA,EAAKzC,UAAU,CAACQ;UAAe;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrCjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7C,UAAU,CAACS,cAAc;UAAA;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpEjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7C,UAAU,CAACU,qBAAqB;UAAA;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvEjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7C,UAAU,CAACW,WAAW;UAAA;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7C,UAAU,CAACa,QAAQ;UAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7C,UAAU,CAACc,gBAAgB,CAACe,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEnFjD,OAAA;YAAKkD,SAAS,EAAC,gBAAgB;YAAAL,QAAA,gBAC7B7C,OAAA;cACEuD,IAAI,EAAC,KAAK;cACV,cAAW,QAAQ;cACnBF,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC/B,UAAU,CAAC4B,GAAG,CAAE;cAAAa,QAAA,EAC7C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPjD,OAAA;cACEuD,IAAI,EAAC,KAAK;cACV,cAAW,QAAQ;cACnBF,OAAO,EAAEA,CAAA,KAAMG,YAAY,CAACpD,UAAU,CAAC4B,GAAG,CAAE;cAAAa,QAAA,EAC7C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAvBE7C,UAAU,CAAC4B,GAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBnB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAlIID,iBAAiB;EAAA,QACNN,SAAS,EACiDE,oBAAoB,EAW7ED,UAAU;AAAA;AAAA6D,EAAA,GAbtBxD,iBAAiB;AAoIvB,eAAeA,iBAAiB;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}