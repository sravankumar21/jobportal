{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/Protect1.js\";\nimport React, { Component } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport DataService from '../services/DataService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Protect1 extends Component {\n  constructor(...args) {\n    super(...args);\n    //<--- This is how u use context in Class Component\n    this.state = {\n      data: \"\"\n    };\n  }\n  //......API call to the server\n  componentDidMount() {\n    DataService.fetchData().then(jsonData => {\n      if (jsonData.data) this.setState({\n        data: jsonData.data\n      });else window.location.reload(); //<--- Refresh the page if found no data (coz user is not authenticated)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", this.context.user.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Here is your data: \", this.state.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n}\nProtect1.contextType = AuthContext;\nexport default Protect1;","map":{"version":3,"names":["React","Component","AuthContext","DataService","jsxDEV","_jsxDEV","Protect1","constructor","args","state","data","componentDidMount","fetchData","then","jsonData","setState","window","location","reload","render","className","children","context","user","role","fileName","_jsxFileName","lineNumber","columnNumber","contextType"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/Protect1.js"],"sourcesContent":["import React, { Component } from 'react'\nimport {AuthContext} from '../context/AuthContext';\nimport DataService from '../services/DataService';\n\nclass Protect1 extends Component {\n    static contextType = AuthContext;  //<--- This is how u use context in Class Component\n\n    state = {\n        data: \"\"\n    }\n\n    //......API call to the server\n    componentDidMount() {\n        DataService.fetchData().then(jsonData =>{\n            if(jsonData.data)\n                this.setState({data: jsonData.data})\n            else\n                window.location.reload()  //<--- Refresh the page if found no data (coz user is not authenticated)\n        })\n    }\n\n    render() {\n        return (\n            <div className = \"text-center\">\n                <h1>Hello, {this.context.user.role}</h1>\n                <p>Here is your data: {this.state.data}</p>\n            </div>\n        )\n    }\n}\nexport default Protect1"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,WAAW,QAAO,wBAAwB;AAClD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IACM;IAAA,KAEnCC,KAAK,GAAG;MACJC,IAAI,EAAE;IACV,CAAC;EAAA;EAED;EACAC,iBAAiBA,CAAA,EAAG;IAChBR,WAAW,CAACS,SAAS,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;MACpC,IAAGA,QAAQ,CAACJ,IAAI,EACZ,IAAI,CAACK,QAAQ,CAAC;QAACL,IAAI,EAAEI,QAAQ,CAACJ;MAAI,CAAC,CAAC,MAEpCM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;IAClC,CAAC,CAAC;EACN;;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACId,OAAA;MAAKe,SAAS,EAAG,aAAa;MAAAC,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,GAAI,SAAO,EAAC,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxCvB,OAAA;QAAAgB,QAAA,GAAG,qBAAmB,EAAC,IAAI,CAACZ,KAAK,CAACC,IAAI;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAEd;AACJ;AAzBMtB,QAAQ,CACHuB,WAAW,GAAG3B,WAAW;AAyBpC,eAAeI,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}