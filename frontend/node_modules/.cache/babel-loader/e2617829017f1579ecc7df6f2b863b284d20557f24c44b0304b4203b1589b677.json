{"ast":null,"code":"var _jsxFileName = \"/Users/sravankumarbattu/theportal/frontend/src/components/studentjobdetails.js\",\n  _s = $RefreshSig$();\n// StudentJobDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentJobDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n  useEffect(() => {\n    // Fetch all jobs from the backend\n    const fetchAllJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/jobs');\n        if (response.ok) {\n          const data = await response.json();\n          setAllJobs(data.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n      } catch (error) {\n        console.error('Error fetching all jobs:', error.message);\n      }\n    };\n\n    // If an ID is specified, fetch details for that specific job\n    if (id) {\n      const fetchJobDetails = async () => {\n        try {\n          const response = await fetch(`http://localhost:4444/jobs/${id}`);\n          if (response.ok) {\n            const data = await response.json();\n            setJob(data.job);\n          } else {\n            console.error('Failed to fetch job details');\n          }\n        } catch (error) {\n          console.error('Error fetching job details:', error.message);\n        }\n      };\n      fetchJobDetails();\n    }\n\n    // Fetch all jobs\n    fetchAllJobs();\n  }, [id]);\n  if (id && !job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homedetailsofjobs\",\n    children: [id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-detailsofstudents\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: job.jobTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-jobsofstudents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-cardsofstudents\",\n        children: allJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-cardofstudents\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.jobTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Job Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 18\n            }, this), \" \", job.jobType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 18\n            }, this), \" \", job.jobDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 18\n            }, this), \" \", job.companyName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Work Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 18\n            }, this), \" \", job.workType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pay Scale:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 18\n            }, this), \" \", job.payScale]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Eligible branches:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 18\n            }, this), \" \", job.branchesEligible.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: job.companyURL,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"apply-button1\",\n            children: \"Apply Now!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentJobDetails, \"l1tcM62+ORBR+jgzfFswXVuoiwQ=\", false, function () {\n  return [useParams];\n});\n_c = StudentJobDetails;\nexport default StudentJobDetails;\nvar _c;\n$RefreshReg$(_c, \"StudentJobDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","StudentJobDetails","_s","id","job","setJob","allJobs","setAllJobs","fetchAllJobs","response","fetch","ok","data","json","jobs","console","error","message","fetchJobDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","className","jobTitle","map","jobType","jobDescription","companyName","workType","payScale","branchesEligible","join","href","companyURL","target","rel","_id","_c","$RefreshReg$"],"sources":["/Users/sravankumarbattu/theportal/frontend/src/components/studentjobdetails.js"],"sourcesContent":["// StudentJobDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/jobpage.css'; // Import the new CSS file\n\nconst StudentJobDetails = () => {\n  const { id } = useParams();\n  const [job, setJob] = useState(null);\n  const [allJobs, setAllJobs] = useState([]);\n\n  useEffect(() => {\n    // Fetch all jobs from the backend\n    const fetchAllJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:4444/jobs');\n        if (response.ok) {\n          const data = await response.json();\n          setAllJobs(data.jobs);\n        } else {\n          console.error('Failed to fetch all jobs');\n        }\n      } catch (error) {\n        console.error('Error fetching all jobs:', error.message);\n      }\n    };\n\n    // If an ID is specified, fetch details for that specific job\n    if (id) {\n      const fetchJobDetails = async () => {\n        try {\n          const response = await fetch(`http://localhost:4444/jobs/${id}`);\n          if (response.ok) {\n            const data = await response.json();\n            setJob(data.job);\n          } else {\n            console.error('Failed to fetch job details');\n          }\n        } catch (error) {\n          console.error('Error fetching job details:', error.message);\n        }\n      };\n\n      fetchJobDetails();\n    }\n\n    // Fetch all jobs\n    fetchAllJobs();\n  }, [id]);\n\n\n  if (id && !job) {\n    return <div>Loading job details...</div>;\n  }\n  return (\n    <div className=\"homedetailsofjobs\">\n      {id && (\n        <div className=\"job-detailsofstudents\">\n          <h4>{job.jobTitle}</h4>\n        </div>\n      )}\n\n      <div className=\"all-jobsofstudents\">\n        <h2>All Jobs</h2>\n        <div className=\"job-cardsofstudents\">\n          {allJobs.map((job) => (\n            <div key={job._id} className=\"job-cardofstudents\">\n              <h3>{job.jobTitle}</h3>\n              <p><strong>Job Type:</strong> {job.jobType}</p>\n              <p><strong>Description:</strong> {job.jobDescription}</p>\n              <p><strong>Company:</strong> {job.companyName}</p>\n              <p><strong>Work Type:</strong> {job.workType}</p>\n              <p><strong>Pay Scale:</strong> {job.payScale}</p>\n              <p><strong>Eligible branches:</strong> {job.branchesEligible.join(', ')}</p>\n\n              <a href={job.companyURL} target=\"_blank\" rel=\"noopener noreferrer\" className=\"apply-button1\">\n                Apply Now!\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentJobDetails;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,UAAU,CAACK,IAAI,CAACE,IAAI,CAAC;QACvB,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC1D;IACF,CAAC;;IAED;IACA,IAAId,EAAE,EAAE;MACN,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;QAClC,IAAI;UACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BP,EAAG,EAAC,CAAC;UAChE,IAAIM,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YAClCR,MAAM,CAACO,IAAI,CAACR,GAAG,CAAC;UAClB,CAAC,MAAM;YACLW,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;UAC9C;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACC,OAAO,CAAC;QAC7D;MACF,CAAC;MAEDC,eAAe,CAAC,CAAC;IACnB;;IAEA;IACAV,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAGR,IAAIA,EAAE,IAAI,CAACC,GAAG,EAAE;IACd,oBAAOJ,OAAA;MAAAmB,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EACA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAL,QAAA,GAC/BhB,EAAE,iBACDH,OAAA;MAAKwB,SAAS,EAAC,uBAAuB;MAAAL,QAAA,eACpCnB,OAAA;QAAAmB,QAAA,EAAKf,GAAG,CAACqB;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACN,eAEDvB,OAAA;MAAKwB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjCnB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvB,OAAA;QAAKwB,SAAS,EAAC,qBAAqB;QAAAL,QAAA,EACjCb,OAAO,CAACoB,GAAG,CAAEtB,GAAG,iBACfJ,OAAA;UAAmBwB,SAAS,EAAC,oBAAoB;UAAAL,QAAA,gBAC/CnB,OAAA;YAAAmB,QAAA,EAAKf,GAAG,CAACqB;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAACuB,OAAO;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAACwB,cAAc;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAACyB,WAAW;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClDvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAAC0B,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAAC2B,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDvB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,EAAQ;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAAC4B,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE5EvB,OAAA;YAAGkC,IAAI,EAAE9B,GAAG,CAAC+B,UAAW;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAACb,SAAS,EAAC,eAAe;YAAAL,QAAA,EAAC;UAE7F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAXInB,GAAG,CAACkC,GAAG;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9EID,iBAAiB;EAAA,QACNH,SAAS;AAAA;AAAAyC,EAAA,GADpBtC,iBAAiB;AAgFvB,eAAeA,iBAAiB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}